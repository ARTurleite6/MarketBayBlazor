@page "/standfeira/{feiraid:int}/{id:int}"
@inject IFeiraService FeiraService
@inject IStandService StandService
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigator
@inject IJSRuntime JS
@inject ICartService Cart
@using Components
@using System.Security.Claims
@using ViewModels.Carrinho

<div class="stand-container">
    <NavBar ShowCarrinho="true" @bind-FilterParam="@filterParam" @bind-ShowCartParam="ShowCart"/>
    <div class="stand-container07">
        <div class="stand-container08">
            <div class="stand-container09">
                <h1 class="stand-text06">@feira.NomeFeira</h1>
            </div>
            <div class="stand-container10">
                <h1 class="stand-text07">@feira.DataInicio.Day/@feira.DataInicio.Month</h1>
            </div>
        </div>
        <div class="stand-container11">
            <div class="stand-container12">
                <h1 class="stand-text08">
                    <span>@stand.Feirante.Conta.Nome</span>
                    <br />
                    <br />
                </h1>
            </div>
        </div>
    </div>
    @if(!ShowCart)
    {
    @foreach (var produto in this.stand.ProdutosStands.Where(produto => produto.Quantidade > 0 && produto.Produto.Nome.IndexOf(this.filterParam,
    StringComparison.OrdinalIgnoreCase) >= 0))
    {
        <div class="stand-container13">
            <div class="stand-container14">
                <div class="stand-container15">
                    <img alt="image"
                    src="https://images.unsplash.com/photo-1586005309510-fee1ad863c04?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=Mnw5MTMyMXwwfDF8c2VhcmNofDQ5fHxtdWdzfGVufDB8fHx8MTY3MTczMTY1NA&amp;ixlib=rb-4.0.3&amp;q=80&amp;w=600"
                    class="stand-image1" />
                </div>
                <div class="stand-container16">
                    <div class="stand-container17">
                        <h1 class="stand-text12">@produto.Produto.Nome</h1>
                    </div>
                    <div class="stand-container18">
                        <div style="display: flex; flex-direction: column">
                            <div class="stand-container19">
                                <h1 class="stand-text13">Preço:</h1>
                            </div>
                            <div class="stand-container20">
                                <h1 class="stand-text14">@produto.Preco€</h1>
                            </div>
                        </div>
                        <AuthorizeView Roles="Cliente">
                            <div style="display: flex; flex-direction: column; margin-left: 100px">
                                <div class="stand-container19">
                                    <h1 class="stand-text13">Quantidade:</h1>
                                </div>
                                        <input class="stand-container20" type="number" id="@($"quantidade-produto-{produto.ProdutoID}")" style="width: 140px; font-size:25px; font-weight: 700; text-align: center" min="0" value="0" max="@produto.Quantidade"/>
                            </div>
                        </AuthorizeView>
                        <AuthorizeView Roles="Feirante">
                            <div style="display: flex; flex-direction: column; margin-left: 100px">
                                <div class="stand-container19">
                                    <h1 class="stand-text13">Stock:</h1>
                                </div>
                                <div class="stand-container20">
                                    <h1 class="stand-text14">@produto.Quantidade</h1>
                                </div>
                            </div>
                        </AuthorizeView>
                    </div>
                    <div class="stand-container21">
                        @if(feira.DataInicio <= DateTime.Now)
                        {
                            <AuthorizeView Roles="Cliente">
                                <Authorized>
                                <div class="stand-container22">
                                    <button class="stand-button1 button" @onclick="@(() => AddToCart(produto))">Adicionar ao Carrinho</button>
                                </div>
                                <div class="stand-container23">
                                    <button class="stand-button2 button"
                                    @onclick="@(() => GoToNegotiation(@produto.ProdutoID))">Regatear</button>
                                </div>
                                </Authorized>
                                <NotAuthorized>
                                        @if (!context.User.Identity?.IsAuthenticated ?? false || context.User.IsInRole("Cliente"))
                                        {
                                                <div class="stand-container22">
                                                    <button class="stand-button1 button" @onclick="@(() => AddToCart(produto))">Adicionar ao Carrinho</button>
                                                </div>
                                                <div class="stand-container23">
                                                    <button class="stand-button2 button" @onclick="@(() => GoToNegotiation(@produto.ProdutoID))">Regatear</button>
                                                </div>
                                        }
                                </NotAuthorized>
                            </AuthorizeView>
                        }
                        <AuthorizeView Roles="Feirante">
                            @if(stand.FeiranteID == Int32.Parse(context.User.FindFirst(claim => claim.Type == ClaimTypes.NameIdentifier)?.Value ?? "-1"))
                            {
                            <div class="stand-container22">
                                <button class="stand-button1 button edit-button">Editar</button>
                            </div>
                            }
                        </AuthorizeView>
                    </div>
                </div>
            </div>

        </div>
    }
    }
    else
    {
    @foreach (var linha in this.cart.Produtos)
    {
        <div class="stand-container13">
            <div class="stand-container14">
                <div class="stand-container15">
                    <img alt="image"
                    src="https://images.unsplash.com/photo-1586005309510-fee1ad863c04?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=Mnw5MTMyMXwwfDF8c2VhcmNofDQ5fHxtdWdzfGVufDB8fHx8MTY3MTczMTY1NA&amp;ixlib=rb-4.0.3&amp;q=80&amp;w=600"
                    class="stand-image1" />
                </div>
                <div class="stand-container16">
                    <div class="stand-container17">
                        <h1 class="stand-text12">@linha.Produto.Nome</h1>
                    </div>
                    <div class="stand-container18">
                        <div style="display: flex; flex-direction: column">
                            <div class="stand-container19">
                                <h1 class="stand-text13">Preço:</h1>
                            </div>
                            <div class="stand-container20">
                                <h1 class="stand-text14">@linha.Preco€</h1>
                            </div>
                        </div>
                        <AuthorizeView Roles="Cliente">
                            <div style="display: flex; flex-direction: column; margin-left: 100px">
                                <div class="stand-container19">
                                    <h1 class="stand-text13">Quantidade:</h1>
                                </div>
                                    <div class="stand-container20">
                                        <h1 class="stand-text14">@linha.Quantidade</h1>
                                    </div>
                            </div>
                        </AuthorizeView>
                    </div>
                    <div class="stand-container21">
                        <AuthorizeView Roles="Cliente">
                            <div class="stand-container22">
                                <button class="stand-button1 button edit-button">Editar</button 
                            </div>
                        </AuthorizeView>
                    </div>
                </div>
            </div>

        </div>
    }
    }
</div>
<div class="stand-container24">
    <AuthorizeView Roles="Cliente">
        <button class="button stand-button1" style="width: 90px;" @onclick="@(() => GoToPay())">Pagar</button>
    </AuthorizeView>

    <button class="button stand-container25" @onclick="@(() => GoToChatRoom())">
        <svg viewBox="0 0 1024 1024" class="stand-icon">
            <path d="M854 86q34 0 59 25t25 59v512q0 34-25 60t-59 26h-598l-170 170v-768q0-34 25-59t59-25h684z">
            </path>
        </svg>
    </button>
    <AuthorizeView Roles="Cliente">
        <button class="button stand-container26">
            <svg viewBox="0 0 1024 1024" class="stand-icon2">
                <path
                    d="M932 550l-114 262q-26 42-74 42h-346q-40 0-70-30t-30-70v-334q0-36 26-62l274-272 18 20q24 24 38 52 6 14 4 28l-40 198h236q34 0 59 26t25 60v46q0 18-6 34zM86 854v-470h84q18 0 31 12t13 30v384q0 18-13 31t-31 13h-84z">
                </path>
            </svg><svg viewBox="0 0 1024 1024" class="stand-icon4">
                <path
                    d="M92 474l114-262q26-42 74-42h346q42 0 71 29t29 71v334q0 36-26 62l-274 272-18-20q-24-24-38-52-6-14-4-28l40-198h-236q-34 0-59-26t-25-60v-46q0-20 6-34zM938 170v470h-84q-18 0-31-12t-13-30v-384q0-18 13-31t31-13h84z">
                </path>
            </svg>
        </button>
    </AuthorizeView>
</div>

<style>
    .stand-container {
        width: 100%;
        display: flex;
        overflow-y: auto;
        overflow-x: hidden;
        min-height: 100vh;
        align-items: center;
        flex-direction: column;
        background-color: #ebc39c;
    }

    .stand-container01 {
        width: 100%;
        height: 96px;
        display: flex;
        position: relative;
        align-items: flex-start;
        background-color: #0f8a82;
    }

    .stand-container02 {
        width: 219px;
        height: 77px;
        display: flex;
        align-self: center;
        align-items: center;
        justify-content: center;
    }

    .stand-container03 {
        flex: 0 0 auto;
        width: 181px;
        display: flex;
        align-self: center;
        margin-top: 0px;
        align-items: center;
        flex-direction: column;
        justify-content: flex-start;
    }

    .stand-thq-dropdown {
        width: 149px;
        cursor: pointer;
        height: 80px;
        display: inline-block;
        position: relative;
        align-self: center;
        border-radius: var(--dl-radius-radius-radius2);
    }

    .stand-dropdown-toggle {
        fill: #595959;
        color: #595959;
        width: 135px;
        height: 94px;
        display: inline-flex;
        align-items: center;
        padding-top: var(--dl-space-space-halfunit);
        padding-left: var(--dl-space-space-unit);
        border-radius: var(--dl-radius-radius-radius2);
        padding-right: var(--dl-space-space-unit);
        padding-bottom: var(--dl-space-space-halfunit);
        justify-content: center;
    }

    .stand-image {
        width: 88px;
        height: 82px;
        object-fit: cover;
    }

    .stand-dropdown-list {
        left: 0%;
        width: max-content;
        display: none;
        z-index: 100;
        position: absolute;
        min-width: 100%;
        transition: 0.3s;
        align-items: stretch;
        border-color: #D9D9D9;
        border-width: 1px;
        border-radius: var(--dl-radius-radius-radius4);
        flex-direction: column;
        list-style-type: none;
        background-color: var(--dl-color-gray-white);
        list-style-position: inside;
    }

    .stand-dropdown {
        cursor: pointer;
        display: inline-block;
        position: relative;
        border-radius: var(--dl-radius-radius-radius2);
    }

    .stand-dropdown-toggle1 {
        fill: #595959;
        color: #595959;
        width: 100%;
        height: 100%;
        display: inline-flex;
        transition: 0.3s;
        align-items: center;
        padding-top: var(--dl-space-space-halfunit);
        padding-left: var(--dl-space-space-unit);
        border-radius: var(--dl-radius-radius-radius4);
        padding-right: var(--dl-space-space-unit);
        padding-bottom: var(--dl-space-space-halfunit);
    }

    .stand-dropdown-toggle1:hover {
        fill: #fff;
        color: #fff;
        background-color: #595959;
    }

    .stand-text {
        width: 100%;
        cursor: pointer;
        display: flex;
        font-size: 20px;
        font-style: normal;
        font-weight: 600;
    }

    .stand-dropdown1 {
        cursor: pointer;
        display: inline-block;
        position: relative;
        border-radius: var(--dl-radius-radius-radius2);
    }

    .stand-dropdown-toggle2 {
        fill: #595959;
        color: #595959;
        width: 100%;
        height: 100%;
        display: inline-flex;
        transition: 0.3s;
        align-items: center;
        padding-top: var(--dl-space-space-halfunit);
        padding-left: var(--dl-space-space-unit);
        border-radius: var(--dl-radius-radius-radius4);
        padding-right: var(--dl-space-space-unit);
        padding-bottom: var(--dl-space-space-halfunit);
    }

    .stand-dropdown-toggle2:hover {
        fill: #fff;
        color: #fff;
        background-color: #595959;
    }

    .stand-text01 {
        width: 100%;
        cursor: pointer;
        display: flex;
        font-size: 20px;
        font-style: normal;
        font-weight: 600;
    }

    .stand-dropdown2 {
        cursor: pointer;
        display: inline-block;
        position: relative;
        border-radius: var(--dl-radius-radius-radius2);
    }

    .stand-dropdown-toggle3 {
        fill: #595959;
        color: #595959;
        width: 100%;
        display: inline-flex;
        transition: 0.3s;
        align-items: center;
        padding-top: var(--dl-space-space-halfunit);
        padding-left: var(--dl-space-space-unit);
        border-radius: var(--dl-radius-radius-radius4);
        padding-right: var(--dl-space-space-unit);
        padding-bottom: var(--dl-space-space-halfunit);
    }

    .stand-dropdown-toggle3:hover {
        fill: #fff;
        color: #fff;
        background-color: #595959;
    }

    .stand-text02 {
        width: 100%;
        cursor: pointer;
        display: flex;
        font-size: 20px;
        font-style: normal;
        font-weight: 500;
    }

    .stand-container04 {
        flex: 0 0 auto;
        width: 75%;
        height: 109px;
        display: flex;
        align-self: center;
        align-items: flex-start;
        border-color: #ebc39c;
        border-width: 5px;
        flex-direction: row;
        justify-content: flex-start;
    }

    .stand-container05 {
        width: 45%;
        height: 100px;
        display: flex;
        align-self: flex-start;
        align-items: center;
        flex-direction: column;
        justify-content: center;
    }

    .stand-button {
        color: var(--dl-color-gray-white);
        align-self: flex-end;
        transition: 0.3s;
        background-color: #562a2a;
    }

    .stand-button:hover {
        color: #e5412a;
        border-color: var(--dl-color-gray-white);
        background-color: var(--dl-color-gray-white);
    }

    .stand-text03 {
        font-style: normal;
        font-weight: 600;
    }

    .stand-container06 {
        width: 303px;
        height: 100px;
        display: flex;
        align-self: flex-start;
        align-items: center;
        flex-direction: column;
        justify-content: center;
    }

    .stand-textinput {
        width: 294px;
        height: 34px;
        font-size: 16px;
        align-self: center;
    }

    .stand-container07 {
        width: 100%;
        height: 72px;
        display: flex;
        align-items: center;
        border-color: #0f8a82;
        border-style: dashed;
        border-width: 3px;
        justify-content: flex-start;
    }

    .stand-container08 {
        flex: 0 0 auto;
        width: 422px;
        height: 22px;
        display: flex;
        align-items: flex-start;
        flex-direction: row;
        justify-content: flex-start;
    }

    .stand-container09 {
        flex: 0 0 auto;
        width: 333px;
        height: 50%;
        display: flex;
        align-items: flex-start;
        margin-left: var(--dl-space-space-unit);
        flex-direction: column;
    }

    .stand-text06 {
        color: #562a2a;
        font-size: 1em;
    }

    .stand-container10 {
        flex: 0 0 auto;
        width: 58px;
        height: 23px;
        display: flex;
        align-items: flex-start;
        flex-direction: column;
    }

    .stand-text07 {
        color: #562a2a;
        font-size: 1em;
    }

    .stand-container11 {
    @*flex:00auto;*@width: 100%;
        height: 19px;
        display: flex;
        align-items: flex-end;
        flex-direction: row;
        justify-content: center;
    }

    .stand-container12 {
        flex: 0 0 auto;
        height: 100%;
        display: flex;
        align-self: flex-end;
        align-items: flex-start;
        flex-direction: column;
    }

    .stand-text08 {
        color: #562a2a;
        width: auto;
        height: auto;
        font-size: 1em;
        align-self: flex-end;
    }

    .stand-container13 {
        flex: 0 0 auto;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .stand-container14 {
        width: 100%;
        height: 374px;
        display: flex;
        margin-top: var(--dl-space-space-unit);
        align-items: flex-start;
        border-color: #ebc39c;
        border-style: dashed;
        border-width: 0px;
    }

    .stand-container15 {
        flex: 0 0 auto;
        width: 503px;
        height: 338px;
        display: flex;
        align-self: center;
        align-items: center;
        margin-left: var(--dl-space-space-unit);
        flex-direction: column;
        justify-content: center;
    }

    .stand-image1 {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .stand-container16 {
        flex: 0 0 auto;
        width: auto;
        height: 100%;
        display: flex;
        align-items: flex-start;
        border-color: var(--dl-color-gray-black);
        border-width: 0px;
        flex-direction: column;
    }

    .stand-container17 {
        width: 276px;
        height: 53px;
        display: flex;
        margin-top: var(--dl-space-space-unit);
        align-items: flex-start;
        margin-left: var(--dl-space-space-halfunit);
    }

    .stand-text12 {
        color: #0f8a82;
        align-self: center;
    }

    .stand-container18 {
        width: 194px;
        height: 106px;
        display: flex;
        align-items: flex-start;
        margin-left: var(--dl-space-space-unit);
        flex-direction: row;
        justify-content: flex-start;
    }

    .stand-container19 {
        flex: 0 0 auto;
        width: 124px;
        height: 44px;
        display: flex;
        align-items: flex-start;
    }

    .stand-text13 {
        color: #e5412a;
    }

    .stand-container20 {
        flex: 0 0 auto;
        width: auto;
        height: 63px;
        display: flex;
        align-items: center;
        padding: 20px;
        flex-direction: row;
        justify-content: center;
        background-color: wheat;
        border-radius: 5px;
    }

    .stand-text14 {
        align-self: center;
    }

    .stand-container21 {
        height: 148px;
        display: flex;
        align-self: center;
        margin-top: var(--dl-space-space-unit);
        align-items: flex-start;
    }

    .stand-container22 {
        flex: 0 0 auto;
        width: 270px;
        height: 100%;
        display: flex;
        align-self: center;
        align-items: center;
        flex-direction: column;
        justify-content: center;
    }

    .stand-button1 {
        color: white;
        width: 252px;
        height: 46px;
        font-size: 20px;
        font-style: normal;
        text-align: center;
        transition: 0.3s;
        font-weight: 700;
        border-color: #0f8a82;
        background-color: #0f8a82;
    }

    .stand-button1:hover {
        color: #0f8a82;
        border-color: var(--dl-color-gray-white);
        background-color: var(--dl-color-gray-white);
    }

    .stand-container23 {
        flex: 0 0 auto;
        width: 274px;
        height: 100%;
        display: flex;
        align-items: center;
        flex-direction: column;
        justify-content: center;
    }

    .stand-button2 {
        color: white;
        width: 252px;
        height: 46px;
        font-size: 20px;
        font-style: normal;
        text-align: center;
        transition: 0.3s;
        font-weight: 700;
        border-color: #ebc39c;
        background-color: #562a2a;
    }

    .stand-button2:hover {
        color: #562a2a;
        border-color: var(--dl-color-gray-white);
        background-color: var(--dl-color-gray-white);
    }

    .stand-container24 {
        display: flex;
        align-items: flex-start;
        flex-direction: column;
        position: fixed;
        z-index: 100000;
        bottom: 20px;
        right: 20px;
    }

    .stand-container25 {
        width: 77px;
        height: 50%;
        display: flex;
        align-self: flex-start;
        align-items: center;
        margin-left: 0px;
        justify-content: center;
        background-color: #0f8a82;
        padding: 5px;
        margin-top: var(--dl-space-space-unit);
    }

    .stand-icon {
        fill: var(--dl-color-gray-white);
        width: 100%;
        height: 100%;
    }

    .stand-container26 {
        width: 77px;
        height: 50%;
        display: flex;
        margin-top: var(--dl-space-space-unit);
        align-items: flex-start;
        margin-left: 0px;
        justify-content: flex-start;
        background-color: #562a2a;
        padding: 5px;
    }

    .stand-icon2 {
        fill: #0f8a82;
        width: 44px;
        height: 32px;
    }

    .stand-icon4 {
        fill: #e5412a;
        width: 42px;
        height: 34px;
        align-self: flex-end;
    }

    .stand-container27 {
        flex: 0 0 auto;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .stand-container28 {
        width: 1160px;
        height: 374px;
        display: flex;
        margin-top: var(--dl-space-space-unit);
        align-items: flex-start;
        border-color: #ebc39c;
        border-style: dashed;
        border-width: 0px;
        background-color: #562a2a;
    }

    .stand-container29 {
        flex: 0 0 auto;
        width: 503px;
        height: 338px;
        display: flex;
        align-self: center;
        align-items: center;
        margin-left: var(--dl-space-space-unit);
        flex-direction: column;
        justify-content: center;
    }

    .stand-image2 {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .stand-container30 {
        flex: 0 0 auto;
        width: 640px;
        height: 100%;
        display: flex;
        align-items: flex-start;
        border-color: var(--dl-color-gray-black);
        border-width: 0px;
        flex-direction: column;
    }

    .stand-container31 {
        width: 276px;
        height: 53px;
        display: flex;
        margin-top: var(--dl-space-space-unit);
        align-items: flex-start;
        margin-left: var(--dl-space-space-halfunit);
    }

    .stand-text15 {
        color: #0f8a82;
        align-self: center;
    }

    .stand-container32 {
        width: 194px;
        height: 106px;
        display: flex;
        align-items: flex-start;
        margin-left: var(--dl-space-space-unit);
        flex-direction: column;
        justify-content: flex-start;
    }

    .stand-container33 {
        flex: 0 0 auto;
        width: 124px;
        height: 44px;
        display: flex;
        align-items: flex-start;
    }

    .stand-text16 {
        color: #e5412a;
    }

    .stand-container34 {
        flex: 0 0 auto;
        width: 78px;
        height: 63px;
        display: flex;
        align-items: center;
        margin-left: var(--dl-space-space-fourunits);
        flex-direction: row;
        justify-content: center;
        background-color: var(--dl-color-gray-white);
    }

    .stand-text17 {
        align-self: center;
    }

    .stand-container35 {
        height: 148px;
        display: flex;
        align-self: center;
        margin-top: var(--dl-space-space-unit);
        align-items: flex-start;
    }

    .stand-container36 {
        flex: 0 0 auto;
        width: 270px;
        height: 100%;
        display: flex;
        align-self: center;
        align-items: center;
        flex-direction: column;
        justify-content: center;
    }

    .stand-button3 {
        color: #562a2a;
        width: 252px;
        height: 46px;
        font-size: 20px;
        font-style: normal;
        text-align: center;
        transition: 0.3s;
        font-weight: 700;
        border-color: #0f8a82;
        background-color: #0f8a82;
    }

    .stand-button3:hover {
        color: #e5412a;
        border-color: var(--dl-color-gray-white);
        background-color: var(--dl-color-gray-white);
    }

    .stand-container37 {
        flex: 0 0 auto;
        width: 274px;
        height: 100%;
        display: flex;
        align-items: center;
        flex-direction: column;
        justify-content: center;
    }

    .stand-button4 {
        color: #0f8a82;
        width: 252px;
        height: 46px;
        font-size: 20px;
        font-style: normal;
        text-align: center;
        transition: 0.3s;
        font-weight: 700;
        border-color: #ebc39c;
        background-color: #ebc39c;
    }

    .stand-button4:hover {
        color: #e5412a;
        border-color: var(--dl-color-gray-white);
        background-color: var(--dl-color-gray-white);
    }

    .stand-container38 {
        flex: 0 0 auto;
        width: 104px;
        height: 136px;
        display: flex;
        align-items: flex-start;
        margin-left: var(--dl-space-space-threeunits);
        border-color: rgba(120, 120, 120, 0.4);
        border-style: dashed;
        border-width: 0px;
        flex-direction: column;
    }

    .stand-container39 {
        flex: 0 0 auto;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .stand-container40 {
        width: 1160px;
        height: 374px;
        display: flex;
        margin-top: var(--dl-space-space-unit);
        align-items: flex-start;
        border-color: #ebc39c;
        border-style: dashed;
        border-width: 0px;
        background-color: #562a2a;
    }

    .stand-container41 {
        flex: 0 0 auto;
        width: 503px;
        height: 338px;
        display: flex;
        align-self: center;
        align-items: center;
        margin-left: var(--dl-space-space-unit);
        flex-direction: column;
        justify-content: center;
    }

    .stand-image3 {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .stand-container42 {
        flex: 0 0 auto;
        width: 640px;
        height: 100%;
        display: flex;
        align-items: flex-start;
        border-color: var(--dl-color-gray-black);
        border-width: 0px;
        flex-direction: column;
    }

    .stand-container43 {
        width: 276px;
        height: 53px;
        display: flex;
        margin-top: var(--dl-space-space-unit);
        align-items: flex-start;
        margin-left: var(--dl-space-space-halfunit);
    }

    .stand-text18 {
        color: #0f8a82;
        align-self: center;
    }

    .stand-container44 {
        width: 194px;
        height: 106px;
        display: flex;
        align-items: flex-start;
        margin-left: var(--dl-space-space-unit);
        flex-direction: column;
        justify-content: flex-start;
    }

    .stand-container45 {
        flex: 0 0 auto;
        width: 124px;
        height: 44px;
        display: flex;
        align-items: flex-start;
    }

    .stand-text19 {
        color: #e5412a;
    }

    .stand-container46 {
        flex: 0 0 auto;
        width: 78px;
        height: 63px;
        display: flex;
        align-items: center;
        margin-left: var(--dl-space-space-fourunits);
        flex-direction: row;
        justify-content: center;
        background-color: var(--dl-color-gray-white);
    }

    .stand-text20 {
        align-self: center;
    }

    .stand-container47 {
        height: 148px;
        display: flex;
        align-self: center;
        margin-top: var(--dl-space-space-unit);
        align-items: flex-start;
    }

    .stand-container48 {
        flex: 0 0 auto;
        width: 270px;
        height: 100%;
        display: flex;
        align-self: center;
        align-items: center;
        flex-direction: column;
        justify-content: center;
    }

    .stand-button5 {
        color: #562a2a;
        width: 252px;
        height: 46px;
        font-size: 20px;
        font-style: normal;
        text-align: center;
        transition: 0.3s;
        font-weight: 700;
        border-color: #0f8a82;
        background-color: #0f8a82;
    }

    .stand-button5:hover {
        color: #e5412a;
        border-color: var(--dl-color-gray-white);
        background-color: var(--dl-color-gray-white);
    }

    .stand-container49 {
        flex: 0 0 auto;
        width: 274px;
        height: 100%;
        display: flex;
        align-items: center;
        flex-direction: column;
        justify-content: center;
    }

    .stand-button6 {
        color: #0f8a82;
        width: 252px;
        height: 46px;
        font-size: 20px;
        font-style: normal;
        text-align: center;
        transition: 0.3s;
        font-weight: 700;
        border-color: #ebc39c;
        background-color: #ebc39c;
    }

    .stand-button6:hover {
        color: #e5412a;
        border-color: var(--dl-color-gray-white);
        background-color: var(--dl-color-gray-white);
    }

    .stand-container50 {
        flex: 0 0 auto;
        width: 104px;
        height: 136px;
        display: flex;
        align-items: flex-start;
        margin-left: var(--dl-space-space-threeunits);
        border-color: rgba(120, 120, 120, 0.4);
        border-style: dashed;
        border-width: 0px;
        flex-direction: column;
    }

    .edit-button {
        margin-left: 200px;
        background-color: #e5412a;
        border-color: #e5412a
    }

    .edit-button:hover {
        color: #e5412a;
        border-color: white;
        background-color: white;
    }

    @@media(max-width: 1200px) {
        .stand-container04 {
            width: 981px;
        }

        .stand-container07 {
            width: 100%;
        }
    }
</style>


@code {
    [Parameter]
    public int ID { get; set; }
    [Parameter]
    public int FeiraID { get; set; }

    public bool ShowCart { get; set; } = false;

    private Feira feira = new Feira();

    private StandFeirante stand = new StandFeirante();

    private string filterParam = string.Empty;

    [CascadingParameter]
    public Task<AuthenticationState> authstate {get; set; }

    private Carrinho cart = new Carrinho();

    protected override async Task OnInitializedAsync()
    {
        var feira = await FeiraService.GetFeira(this.FeiraID);
        if (feira != null)
        {
            this.feira = feira;
        }

        var stand = await StandService.GetStand(this.ID);
        if (stand != null)
        {
            Console.WriteLine("Encontrei o stand");
            this.stand = stand;
            Console.WriteLine(stand.ID);
            Console.WriteLine(stand.FeiranteID);
            Console.WriteLine(stand.Feirante != null);
            Console.WriteLine(stand.Feirante?.Conta.Nome);
        }
        this.cart = await Cart.Carrinho ?? new Carrinho();
    }

    private bool firstRender = true;    
    private IJSObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            this.module = await JS.InvokeAsync<IJSObjectReference>("import", "./scripts.js");
            if(this.module is not null)
            {
                Console.WriteLine("Modulo importado");
            }
            firstRender = !firstRender;
        }
    }

    private async Task<bool> DealLogin(string page)
    {
        var auth = await authstate;
        if(auth.User.Identity?.IsAuthenticated ?? false)
            return true;

        var confirm = await JS.InvokeAsync<bool>("confirm", "Você deve estar autenticado para efetuar esta operação, Deseja efetuar o login?");
        if(!confirm)
        {
            return false;
        }
        await LocalStorage.SetItemAsStringAsync("last_page", page);
        Navigator.NavigateTo("/login");
        return false;
    }

    private async Task GoToNegotiation(int produtoID)
    {

        var logged = await DealLogin($"/proposta/{this.FeiraID}/{this.ID}/{produtoID}");
        if(logged)
        {
            Navigator.NavigateTo($"/proposta/{this.FeiraID}/{this.ID}/{produtoID}");
        }

    }

    private async Task GoToChatRoom()
    {
        var logged = await DealLogin($"/chatroom/{this.FeiraID}/{this.ID}");
        if(logged)
        {
            Navigator.NavigateTo($"/chatroom/{this.FeiraID}/{this.ID}");
        }
    }

    private async void AddToCart(ProdutoStand produto)
    {
        var logged = await DealLogin(Navigator.Uri);
        if(logged)
        {
        if (this.module is not null)
        {
            Console.WriteLine("id do produto " + produto.ProdutoID);
            int quantidade = await JS.InvokeAsync<int>("getProductQuantity", produto.ProdutoID);
            if (quantidade > 0)
            {
                var res = await Cart.AddProduto(produto.Produto, preco: produto.Preco, quantidade, stand.ID);
                if(res)
                {
                        await JS.InvokeVoidAsync("alert", "Produto adicionado com sucesso ao carrinho");
                        this.cart = await Cart.GetCarrinho(this.stand.ID) ?? new Carrinho();
                        produto.Quantidade -= quantidade;
                        StateHasChanged();
                }
                else
                {
                    await JS.InvokeVoidAsync("alert", "Erro a adicionar produto ao carrinho");
                }
            }
            else{
                await JS.InvokeVoidAsync("alert", "Deve incluir alguma quantidade para adicionar produto ao carrinho");
            }
        }
        }
    }

    private void GoToPay()
    {
        Navigator.NavigateTo($"/carrinhocompra/{this.stand.ID}");
    }

}