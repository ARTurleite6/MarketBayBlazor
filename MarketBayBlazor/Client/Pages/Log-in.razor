@page "/login"
@inject AuthenticationStateProvider AuthStateProvider;
@inject HttpClient http;
@inject NavigationManager navigator;
@inject ILocalStorageService LocalStorage;
@inject IJSRuntime JS

<div class="login-container">
  <header data-thq="thq-navbar" class="login-navbar-interactive">
    <div class="logo">
      <h1>Markey Bay</h1>
      <img alt="logo" src="logo.png" class="login-logo" />
    </div>
    <div data-thq="thq-navbar-nav" data-role="Nav" class="login-desktop-menu">
      <nav data-thq="thq-navbar-nav-links" data-role="Nav" class="login-nav">
        <span class="login-text01">Work</span>
        <span class="login-text02">Dashboard</span>
        <span class="login-text03">Sobre</span>
        <span class="login-text04">Contactos</span>
      </nav>
    </div>
  </header>
  <header class="login-container03">
    <div class="login-container04">
      <div class="login-container05">
        <h1 class="login-text10">
          <span>Log in</span>
          <br />
        </h1>
        <div class="login-container06">
          <span>
            <span class="login-verde registo-text">NÃ£o tem conta?</span>
            <br />
          </span>
          <a href="/registerclient" target="_self" rel="noreferrer noopener">
            <span class="login-laranja registo-text">&nbsp;Registo</span>
            <br />
          </a>
        </div>
      </div>
    </div>
  </header>
  <main class="login-container07">
    <EditForm Model="@dto" class="login-form" OnValidSubmit="@(async () => await HandleLogin())">
      <div class="login-email">
        <div class="login-container08">
          <h2 class="entry-form">Email</h2>
          <InputText @bind-Value="dto.Email" placeholder="Email" class="input" />
        </div>
      </div>
      <div class="login-password">
        <div class="login-container09">
          <h2 class="entry-form">Password</h2>
          <InputText @bind-Value="dto.Password" placeholder="Password" class="input" type="password" />
        </div>
      </div>
      <div class="login-container10">
        <button class="button later-button" onclick="@(() => @navigator.NavigateTo("/feiras"))">
          <span>
            <span style="font-weight: 800">Fazer mais tarde</span>
            <br />
          </span>
        </button>
        <button class="button button-login" type="submit">
          <span>
            <span style="font-weight: 800">Log in</span>
            <br />
          </span>
        </button>
      </div>
    </EditForm>
  </main>
</div>

<style>
  .input {
    width: 100%;
  }

  .login-container {
    width: 100%;
    display: flex;
    overflow: auto;
    min-height: 100vh;
    align-items: center;
    flex-direction: column;
    background-color: #ebc39c;
  }

  .login-navbar-interactive {
    width: 100%;
    display: flex;
    position: relative;
    align-items: center;
    padding-top: var(--dl-space-space-twounits);
    padding-left: var(--dl-space-space-threeunits);
    padding-right: var(--dl-space-space-threeunits);
    padding-bottom: var(--dl-space-space-twounits);
    justify-content: space-between;
  }

  .login-logo {
    height: 95px;
    width: 95px;
  }

  .login-desktop-menu {
    display: flex;
  }

  .login-nav {
    flex: 0 0 auto;
    display: flex;
    align-items: center;
    flex-direction: row;
  }

  .login-text01 {
    margin-left: var(--dl-space-space-twounits);
    color: #562a2a;
    font-size: 16px;
    font-weight: 500;
  }

  .login-text02 {
    margin-left: var(--dl-space-space-twounits);
    color: #562a2a;
    font-size: 16px;
    font-weight: 500;
  }

  .login-text03 {
    margin-left: var(--dl-space-space-twounits);
    color: #562a2a;
    font-size: 16px;
    font-weight: 500;
  }

  .login-text04 {
    margin-left: var(--dl-space-space-twounits);
    color: #562a2a;
    font-size: 16px;
    font-weight: 500;
  }

  .login-burger-menu {
    display: none;
    align-items: center;
    justify-content: center;
  }

  .login-icon {
    width: var(--dl-size-size-xsmall);
    height: var(--dl-size-size-xsmall);
  }

  .login-mobile-menu {
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100vh;
    display: none;
    padding: 32px;
    z-index: 100;
    position: fixed;
    flex-direction: column;
    justify-content: space-between;
    background-color: #fff;
  }

  .login-nav1 {
    display: flex;
    align-items: flex-start;
    flex-direction: column;
  }

  .login-container01 {
    width: 100%;
    display: flex;
    align-items: center;
    margin-bottom: var(--dl-space-space-threeunits);
    justify-content: space-between;
  }

  .login-image {
    height: 2rem;
  }

  .login-menu-close {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .login-icon02 {
    width: var(--dl-size-size-xsmall);
    height: var(--dl-size-size-xsmall);
  }

  .login-nav2 {
    flex: 0 0 auto;
    display: flex;
    align-items: flex-start;
    flex-direction: column;
  }

  .login-text05 {
    margin-bottom: var(--dl-space-space-unit);
  }

  .login-text06 {
    margin-bottom: var(--dl-space-space-unit);
  }

  .login-text07 {
    margin-bottom: var(--dl-space-space-unit);
  }

  .login-text08 {
    margin-bottom: var(--dl-space-space-unit);
  }

  .login-text09 {
    margin-bottom: var(--dl-space-space-unit);
  }

  .login-container02 {
    flex: 0 0 auto;
    width: auto;
    display: flex;
    margin-top: var(--dl-space-space-unit);
    align-items: center;
    flex-direction: row;
  }

  .login-login {
    margin-right: var(--dl-space-space-twounits);
    color: #562a2a;
    font-size: 2.5em;
    font-weight: 700;
  }

  .login-icon-group {
    display: flex;
  }

  .login-icon04 {
    width: var(--dl-size-size-xsmall);
    height: var(--dl-size-size-xsmall);
    margin-right: var(--dl-space-space-twounits);
  }

  .login-icon06 {
    width: var(--dl-size-size-xsmall);
    height: var(--dl-size-size-xsmall);
    margin-right: var(--dl-space-space-twounits);
  }

  .login-icon08 {
    width: var(--dl-size-size-xsmall);
    height: var(--dl-size-size-xsmall);
  }

  .login-container03 {
    flex: 0 0 auto;
    width: 100%;
    display: flex;
    align-items: flex-start;
    margin-bottom: var(--dl-space-space-twounits);
    justify-content: center;
  }

  .login-container04 {
    flex: 0 0 auto;
    width: 200px;
    height: 100px;
    display: flex;
    align-items: center;
    flex-direction: row;
    justify-content: center;
  }

  .login-container05 {
    flex: 0 0 auto;
    height: 86px;
    display: flex;
    align-items: flex-start;
    flex-direction: column;
    justify-content: space-between;
  }

  .login-text10 {
    color: #562a2a;
    align-self: center;
    font-size: 2.5em;
    align-self: center;
    font-style: normal;
    font-weight: 700;
  }

  .login-container06 {
    width: 100%;
    height: 37px;
    display: flex;
    align-items: center;
    padding-left: var(--dl-space-space-unit);
  }

  .login-container07 {
    flex: 1;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .login-form {
    width: 100%;
    height: auto;
    display: flex;
    align-self: flex-start;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .logo {
    display: flex;
    flex-direction: column;
    width: 200px;
    height: 100px;
    align-items: center;
    flex: 0 0 auto;
    justify-content: center;
  }

  .login-email {
    flex: 0 0 auto;
    width: 100%;
    display: flex;
    align-items: flex-start;
    justify-content: center;
  }

  .login-container08 {
    flex: 0 0 auto;
    width: 308px;
    display: flex;
    margin-top: var(--dl-space-space-twounits);
    align-items: flex-start;
    flex-direction: column;
  }

  .login-password {
    flex: 0 0 auto;
    width: 100%;
    display: flex;
    align-items: flex-start;
    justify-content: center;
  }

  .login-container09 {
    flex: 0 0 auto;
    width: 308px;
    display: flex;
    margin-top: var(--dl-space-space-twounits);
    align-items: flex-start;
    flex-direction: column;
  }

  .login-container10 {
    gap: var(--dl-space-space-threeunits);
    flex: 0 0 auto;
    height: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .button-login {
    background-color: #0f8a82;
    color: white;
    display: flex;
    width: 100px;
    flex-direction: row;
    justify-content: center;
    border-color: #0f8a82;
  }

  .button-login:hover,
  .later-button:hover {
    color: #0f8a82;
    border-color: var(--dl-color-gray-white);
    background-color: var(--dl-color-gray-white);
  }

  .later-button {
    color: white;
    background-color: #562a2a;
    border-color: #562a2a;
  }

  .later-button,
  .button-login {
    transition: 0.3s;
  }

  @@media(max-width: 767px) {
    .login-navbar-interactive {
      padding-left: var(--dl-space-space-twounits);
      padding-right: var(--dl-space-space-twounits);
    }

    .login-desktop-menu {
      display: none;
    }

    .login-text01 {
      margin-left: var(--dl-space-space-unit);
    }

    .login-text02 {
      margin-left: var(--dl-space-space-unit);
    }

    .login-text03 {
      margin-left: var(--dl-space-space-unit);
    }

    .login-text04 {
      margin-left: var(--dl-space-space-unit);
    }

    .login-burger-menu {
      display: flex;
    }
  }

  @@media(max-width: 479px) {
    .login-navbar-interactive {
      padding: var(--dl-space-space-unit);
    }

    .login-mobile-menu {
      padding: 16px;
    }
  }

  .entry-form {
    color: #562a2a;
    font-size: 1.5em;
  }

  .registo-text {
    font-size: 20px;
    font-weight: 700;
  }

  .login-verde {
    color: #0f8a82;
  }

  .login-laranja {
    color: rgb(229, 65, 42);
  }
</style>

@code {
  private UserLoginDTO dto = new UserLoginDTO();

  protected override async Task OnInitializedAsync()
  {
    await LocalStorage.RemoveItemAsync("token");
  }



  private async Task HandleLogin()
  {
    var result = await http.PostAsJsonAsync("api/auth", dto);
    if (result.IsSuccessStatusCode)
    {
      var token = await result.Content.ReadAsStringAsync();
      await LocalStorage.SetItemAsync("token", token);
      await AuthStateProvider.GetAuthenticationStateAsync();
      navigator.NavigateTo("/feiras");
      await JS.InvokeVoidAsync("alert", "Login efetuado com sucesso");
      var lastPage = await LocalStorage.GetItemAsStringAsync("last_page");
      await LocalStorage.RemoveItemAsync("last_page");
      if (lastPage == null)
      {
        lastPage = "/";
      }
      navigator.NavigateTo(lastPage);
    }
    else
    {
      await JS.InvokeVoidAsync("alert", "Username ou password invÃ¡lidos");
    }



  }
}